plugins {
    id "com.android.application"
    // START: FlutterFire Configuration
    id 'com.google.gms.google-services'
    // END: FlutterFire Configuration
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "app.work_time_manager"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "app.work_time_manager"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        // Prioritize environment variable for CI, otherwise use local properties.
        versionCode System.getenv("VERSION_CODE") != null ? System.getenv("VERSION_CODE").toInteger() : flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
        release {
            // This configuration reads the signature details from the environment variables
            // set in the GitHub Action.
            if (System.getenv("ORG_GRADLE_PROJECT_android.signing.storeFile") != null) {
                storeFile file(System.getenv("ORG_GRADLE_PROJECT_android.signing.storeFile"))
                storePassword System.getenv("ORG_GRADLE_PROJECT_android.signing.storePassword")
                keyAlias System.getenv("ORG_GRADLE_PROJECT_android.signing.keyAlias")
                keyPassword System.getenv("ORG_GRADLE_PROJECT_android.signing.keyPassword")
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
        }
    }
}

flutter {
    source '../..'
}

dependencies {}
